apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "catops.fullname" . }}
  labels:
    {{- include "catops.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "catops.selectorLabels" . | nindent 6 }}
  updateStrategy:
    {{- toYaml .Values.daemonset.updateStrategy | nindent 4 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "catops.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "catops.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- if .Values.prometheus.enabled }}
      # Wait for Prometheus to be ready before starting CatOps
      initContainers:
      - name: wait-for-prometheus
        image: busybox:1.36
        command:
        - sh
        - -c
        - |
          echo "Waiting for Prometheus to be ready..."
          until wget -qO- --timeout=2 http://{{ .Release.Name }}-prometheus-server:80/-/healthy 2>/dev/null; do
            echo "Prometheus not ready yet, waiting 5 seconds..."
            sleep 5
          done
          echo "✅ Prometheus is ready!"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          capabilities:
            drop:
            - ALL
      {{- end }}
      containers:
      - name: catops-connector
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        # Backend configuration
        - name: CATOPS_BACKEND_URL
          value: {{ .Values.backend.url | quote }}
        - name: CATOPS_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "catops.fullname" . }}
              key: auth-token
        # Kubernetes configuration
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SECRET_NAME
          value: {{ include "catops.fullname" . | quote }}
        # Collection settings
        - name: COLLECTION_INTERVAL
          value: {{ .Values.collection.interval | quote }}
        {{- if .Values.prometheus.enabled }}
        # Prometheus integration (optional)
        - name: PROMETHEUS_URL
          value: "http://{{ .Release.Name }}-prometheus-server:80"
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        # Temporary directory для readonly root filesystem
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
